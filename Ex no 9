# oops
//byte stream
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package bytestreamexample;
import java.io.FileOutputStream;
import java.io.IOException;
/**
 *
 * @author ELCOT
 */
public class ByteStreamExample {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
          try {
            FileOutputStream outputStream = new FileOutputStream("binaryFile.bin");
            String data = "This is an example of writing to a binary file using Byte Stream.";
            byte[] bytes = data.getBytes();
            outputStream.write(bytes);
            outputStream.close();
            System.out.println("Data has been written to the binary file.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
}


//charecter stream
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package character.streamexample;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
/**
 *
 * @author ELCOT
 */
public class CharacterStreamExample {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
          try {
            Writer writer = new FileWriter("binaryFile.txt");
            String data = "This is an example of writing to a binary file using Character Stream.";
            writer.write(data);
            writer.close();
            System.out.println("Data has been written to the binary file.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
}

//file content
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package filecontentcopy;
import java.io.*;
/**
 *
 * @author ELCOT
 */
public class FileContentCopy {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
          String inputFile = "input.txt";
        String outputFile = "output.txt";

        try {
            // Creating a BufferedReader object to read the input file
            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            // Creating a BufferedWriter object to write to the output file
            BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile));

            String line;
            // Reading lines from the input file until the end is reached
            while ((line = reader.readLine()) != null) {
                // Replacing extra spaces with single space
                String trimmedLine = line.replaceAll("\\s+", " ");
                // Writing the modified line to the output file
                writer.write(trimmedLine);
                // Writing a new line to maintain the original format
                writer.newLine();
            }

            // Closing the reader and writer
            reader.close();
            writer.close();

            System.out.println("File content copied successfully with unnecessary spaces removed.");

        } catch (IOException e) {
            System.err.println("IOException: " + e.getMessage());
        }
    }
    
}


//file property
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package fileproperties;
import java.io.File;
import java.util.Scanner;
/**
 *
 * @author ELCOT
 */
public class FileProperties {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
         Scanner scanner = new Scanner(System.in);

        // Getting file name from the user
        System.out.println("Enter the file name: ");
        String fileName = scanner.nextLine();

        // Creating a file object
        File file = new File(fileName);

        // Checking if the file exists
        if (file.exists()) {
            System.out.println("File exists.");

            // Checking if the file is readable and/or writable
            System.out.println("Readable: " + file.canRead());
            System.out.println("Writable: " + file.canWrite());

            // Getting the file type
            int index = fileName.lastIndexOf('.');
            if (index > 0 && index < fileName.length() - 1) {
                String extension = fileName.substring(index + 1).toLowerCase();
                System.out.println("File Type: " + extension);
            } else {
                System.out.println("File Type: Not Found");
            }

            // Getting the length of the file in bytes
            System.out.println("File length in bytes: " + file.length());
        } else {
            System.out.println("File does not exist.");
        }

        // Closing the scanner
        scanner.close();
    }
    
}

